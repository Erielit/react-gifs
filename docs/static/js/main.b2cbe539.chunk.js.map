{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACxBR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAqBO,OACnCN,EAAS,MAIX,SACE,uBAAOO,KAAK,OAAOR,MAAOA,EAAOS,SAZhB,SAAC,GAA2B,IAAfT,EAAc,EAAxBU,OAAUV,MAChCC,EAASD,S,+BCNAW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACT,mCACNC,EAFe,uDACT,mCADS,cAEgDC,UACnEH,GAHmB,sBAKEI,MAAMF,GALR,cAKfG,EALe,gBAMEA,EAASC,OANX,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,IAC9B,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,iBAAE,EAAaC,wBAAf,aAAE,EAA+BZ,QAXnB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAW,yCAAhB,UACE,qBAAKC,IAAKL,EAAOM,IAAKhB,IACtB,4BAAIU,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECD0B,SAACA,GAC3B,MAA0Bb,mBAAS,CAAEoB,KAAM,GAAIa,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,WAEJ,CAACpB,IAEGqB,EDZ2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAW,kCAAf,SAAmDhB,IAClDoB,GACC,mBAAGJ,UAAW,iCAAd,yBAEF,qBAAKA,UAAW,YAAhB,SACGH,EAAOJ,KAAI,SAACmB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEXnBkB,EAAe,WAC1B,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG4C,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCZxB+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.b2cbe539.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const handleChange = ({ target: { value } }) => {\r\n    setValue(value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.trim().length > 2) {\r\n      setCategories((cats) => [value, ...cats]);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={value} onChange={handleChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const key = \"EUtrAGNFXRvgfNeerW22qVVShgKEh530\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map((item) => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      url: item.images?.downsized_medium?.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className={\"card animate__animated animate__fadeIn\"}>\r\n      <img alt={title} src={url} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className={\"animate_animated animate_fadeIn\"}>{category}</h3>\r\n      {loading && (\r\n        <p className={\"animate_animated animate_flash\"}>Cargando...</p>\r\n      )}\r\n      <div className={\"card-grid\"}>\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 1500);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  //   const handleAdd = () => {\r\n  //     setCategories([...categories, new Date().getTime()]);\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"animate.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}